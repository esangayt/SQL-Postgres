// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table users {
  id integer [pk, increment]
  username varchar [not null, unique]
  password varchar [not null]
  email varchar(50) [not null, unique]
  role varchar [not null]
  gender varchar(10) [not null]
  created_at timestamp [default: 'now()']
}

Table posts {
  id integer [pk, increment]
  created_by integer
  title varchar(200) [default: '']
  body text [default: '']
  og_image varchar 
  slug varchar [not null, unique]
  published boolean

}

Table claps {
  id integer [pk, increment]
  post_id integer
  user_id integer
  counter integer [default: 0]
  created_at timestamp

  indexes {
    (post_id, user_id) [unique]
    (post_id) 
  }
}

Table comments{
  comment_id integer [pk, increment]
  post_id integer
  user_id integer
  context text
  comment_parent_id integer
  created_at timestamp
  visible boolean

  indexes {
    (post_id) 
    (visible)
  }
}

Table user_lists{
  user_list_id integer [pk, increment]
  user_id integer
  title varchar(100)

  indexes {
    (user_id,title) [unique]
    (user_id)
  }
}

Table user_list_post {
  user_list_post integer [pk, increment]
  user_list_id integer
  post_id integer

  
}

Ref: "users"."id" < "posts"."created_by"
Ref: "posts"."id" < "claps"."post_id"
Ref: "users"."id" < "claps"."user_id"

Ref: "posts"."id" < "comments"."post_id"

Ref: "users"."id" < "comments"."user_id"



Ref: "comments"."comment_id" < "comments"."comment_parent_id"

Ref: "users"."id" < "user_lists"."user_list_id"

Ref: "user_lists"."user_list_id" < "user_list_post"."user_list_id"

Ref: "posts"."id" < "user_list_post"."post_id"